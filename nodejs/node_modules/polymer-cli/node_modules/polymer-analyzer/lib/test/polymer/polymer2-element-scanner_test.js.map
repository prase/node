{"version":3,"sources":["test/polymer/polymer2-element-scanner_test.ts"],"names":[],"mappings":"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","file":"polymer2-element-scanner_test.js","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\nimport {assert, use as chaiUse} from 'chai';\nimport * as path from 'path';\n\nimport {Visitor} from '../../javascript/estree-visitor';\nimport {JavaScriptParser} from '../../javascript/javascript-parser';\nimport {ScannedPolymerElement} from '../../polymer/polymer-element';\nimport {Polymer2ElementScanner} from '../../polymer/polymer2-element-scanner';\nimport {FSUrlLoader} from '../../url-loader/fs-url-loader';\nimport {CodeUnderliner} from '../test-utils';\n\nchaiUse(require('chai-subset'));\n\nsuite('Polymer2ElementScanner', () => {\n  const testFilesDir = path.resolve(__dirname, '../static/polymer2/');\n  const urlLoader = new FSUrlLoader(testFilesDir);\n  const underliner = new CodeUnderliner(urlLoader);\n\n  async function getElements(\n      filename: string): Promise<ScannedPolymerElement[]> {\n    const file = await urlLoader.load(filename);\n    const parser = new JavaScriptParser();\n    const document = parser.parse(file, filename);\n    const scanner = new Polymer2ElementScanner();\n    const visit = (visitor: Visitor) =>\n        Promise.resolve(document.visit([visitor]));\n\n    const features = await scanner.scan(document, visit);\n    return features.filter(\n        (e) => e instanceof ScannedPolymerElement) as ScannedPolymerElement[];\n  };\n\n  function getTestProps(element: ScannedPolymerElement): any {\n    const props: any = {\n      className: element.className,\n      superClass: element.superClass && element.superClass.identifier,\n      tagName: element.tagName,\n      description: element.description,\n      summary: element.summary,\n      properties: element.properties.map((p) => {\n        const result = {name: p.name, description: p.description} as any;\n        if (p.type) {\n          result.type = p.type;\n        }\n\n        return result;\n      }),\n      attributes: element.attributes.map((a) => ({\n                                           name: a.name,\n                                         })),\n      methods: element.methods.map((m) => ({\n                                     name: m.name,\n                                     params: m.params, return: m.return,\n                                     description: m.description\n                                   })),\n\n    };\n    if (element.mixins.length > 0) {\n      props.mixins = element.mixins.map((m) => m.identifier);\n    }\n    return props;\n  }\n\n  test('Finds two basic elements', async() => {\n    const elements = await getElements('test-element-1.js');\n    const elementData = elements.map(getTestProps);\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        summary: '',\n        properties: [{\n          name: 'foo',\n          description: 'The foo prop.',\n          type: '(m-test|function)',\n        }],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n      },\n      {\n        tagName: undefined,\n        className: 'BaseElement',\n        superClass: 'Polymer.Element',\n        description: 'A very basic element',\n        summary: 'A basic element',\n        properties:\n            [{name: 'foo', description: 'A base foo element.', type: 'string'}],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n      },\n    ]);\n\n    const underlinedSource1 =\n        await underliner.underline(elements[0].sourceRange);\n    assert.equal(underlinedSource1, `\nclass TestElement extends Polymer.Element {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  static get properties() {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    return {\n~~~~~~~~~~~~\n      /**\n~~~~~~~~~\n       * The foo prop.\n~~~~~~~~~~~~~~~~~~~~~~\n       * @public\n~~~~~~~~~~~~~~~~\n       * @type {m-test|function}\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n       */\n~~~~~~~~~\n      foo: {\n~~~~~~~~~~~~\n        notify: true,\n~~~~~~~~~~~~~~~~~~~~~\n        type: String,\n~~~~~~~~~~~~~~~~~~~~~\n      }\n~~~~~~~\n    }\n~~~~~\n  }\n~~~\n}\n~`);\n\n    const underlinedSource2 =\n        await underliner.underline(elements[1].sourceRange);\n    assert.equal(underlinedSource2, `\nclass BaseElement extends Polymer.Element {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  static get properties() {\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    return {\n~~~~~~~~~~~~\n      /** A base foo element. */\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n      foo: {\n~~~~~~~~~~~~\n        notify: true,\n~~~~~~~~~~~~~~~~~~~~~\n        type: String,\n~~~~~~~~~~~~~~~~~~~~~\n      },\n~~~~~~~~\n    };\n~~~~~~\n  }\n~~~\n}\n~`);\n  });\n\n  test('Uses static is getter for tagName', async() => {\n    const elements = await getElements('test-element-2.js');\n    const elementData = elements.map(getTestProps);\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'HTMLElement',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n      },\n    ]);\n  });\n\n  test('Finds vanilla elements', async() => {\n    const elements = await getElements('test-element-4.js');\n    const elementData = elements.map(getTestProps);\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'HTMLElement',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [\n          {\n            name: 'a',\n          },\n          {\n            name: 'b',\n          }\n        ],\n        methods: [],\n      },\n    ]);\n  });\n\n  test('Observed attributes override induced attributes', async() => {\n    const elements = await getElements('test-element-5.js');\n    const elementData = elements.map(getTestProps);\n\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        summary: '',\n        properties: [{\n          name: 'foo',\n          description: '',\n          type: 'string',\n        }],\n        attributes: [\n          {\n            name: 'a',\n          },\n          {\n            name: 'b',\n          }\n        ],\n        methods: [],\n      },\n    ]);\n  });\n\n  test('properly sets className for elements with the memberof tag', async() => {\n    const elements = await getElements('test-element-8.js');\n    const elementData = elements.map(getTestProps);\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element-one',\n        className: 'Polymer.TestElementOne',\n        superClass: 'Polymer.Element',\n        description:\n            `This element is a member of Polymer namespace and is registered with its\nnamespaced name.`,\n        summary: '',\n        properties: [{\n          name: 'foo',\n          description: '',\n          type: 'string',\n        }],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n      },\n      {\n        tagName: 'test-element-two',\n        className: 'Polymer.TestElementTwo',\n        superClass: 'Polymer.Element',\n        description:\n            `This element is a member of Polymer namespace and is registered without its\nnamespaced name.`,\n        summary: '',\n        properties: [{\n          name: 'foo',\n          description: '',\n          type: 'string',\n        }],\n        attributes: [{\n          name: 'foo',\n        }],\n        methods: [],\n      }\n    ]);\n  });\n\n  test('Read mixes annotations', async() => {\n    const elements = await getElements('test-element-6.js');\n    const elementData = elements.map(getTestProps);\n\n    assert.deepEqual(elementData, [\n      {\n        tagName: 'test-element',\n        className: 'TestElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n        mixins: ['Mixin2', 'Mixin1'],\n      },\n    ]);\n  });\n\n  test('Reads just mixin application', async() => {\n    const elements = await getElements('test-element-9.js');\n    const elementData = elements.map(getTestProps);\n\n    assert.deepEqual(elementData, [\n      {\n        tagName: undefined,\n        className: 'BaseElement',\n        superClass: 'Polymer.Element',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n      },\n      {\n        tagName: undefined,\n        className: 'SubElement',\n        superClass: 'BaseElement',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n        mixins: ['Mixin'],\n      },\n      {\n        tagName: undefined,\n        className: 'SubElement2',\n        superClass: 'BaseElement',\n        description: '',\n        summary: '',\n        properties: [],\n        attributes: [],\n        methods: [],\n        mixins: ['Mixin'],\n      },\n    ]);\n  });\n\n  test(\n      'properly reads properties and methods of elements and element classes',\n      async() => {\n        const elements = await getElements('test-element-10.js');\n        const elementData = elements.map(getTestProps);\n        assert.deepEqual(elementData, [\n          {\n            tagName: 'test-element',\n            className: 'TestElement',\n            superClass: 'Polymer.Element',\n            description: ``,\n            summary: '',\n            properties: [{\n              name: 'foo',\n              description: '',\n              type: 'string',\n            }],\n            attributes: [{\n              name: 'foo',\n            }],\n            methods: [\n              {\n                name: 'customInstanceFunction',\n                description: '',\n                params: [], return: undefined\n              },\n              {\n                name: 'customInstanceFunctionWithJSDoc',\n                description: 'This is the description for ' +\n                    'customInstanceFunctionWithJSDoc.',\n                params: [], return: undefined\n              },\n              {\n                name: 'customInstanceFunctionWithParams',\n                description: '',\n                params: [{name: 'a'}, {name: 'b'}, {name: 'c'}],\n                return: undefined,\n              },\n              {\n                name: 'customInstanceFunctionWithParamsAndJSDoc',\n                description: 'This is the description for ' +\n                    'customInstanceFunctionWithParamsAndJSDoc.',\n                params: [{name: 'a'}, {name: 'b'}, {name: 'c'}],\n                return: undefined,\n              },\n              {\n                name: 'customInstanceFunctionWithParamsAndPrivateJSDoc',\n                description: 'This is the description for\\n' +\n                    'customInstanceFunctionWithParamsAndPrivateJSDoc.',\n                params: [], return: undefined,\n              },\n            ],\n          },\n        ]);\n      });\n});\n"]}