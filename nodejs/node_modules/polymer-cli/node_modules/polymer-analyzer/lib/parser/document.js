/**
 * @license
 * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const source_range_1 = require("../model/source-range");
/**
 * A parsed Document.
 *
 * @template AstNode The AST type of the document.
 * @template Visitor The type of the visitors that can walk the document.
 */
class ParsedDocument {
    constructor(from) {
        this.url = from.url;
        this.baseUrl = from.baseUrl || this.url;
        this.contents = from.contents;
        this.ast = from.ast;
        this._locationOffset = from.locationOffset;
        this.astNode = from.astNode;
        this.isInline = from.isInline;
    }
    sourceRangeForNode(node) {
        const baseSource = this._sourceRangeForNode(node);
        return source_range_1.correctSourceRange(baseSource, this._locationOffset);
    }
    ;
}
exports.ParsedDocument = ParsedDocument;

//# sourceMappingURL=document.js.map
